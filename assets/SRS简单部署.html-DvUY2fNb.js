import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as t,c as a,e as s}from"./app-DVZwNepu.js";const n={},i=s(`<h1 id="srs简单部署" tabindex="-1"><a class="header-anchor" href="#srs简单部署"><span>SRS简单部署</span></a></h1><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h2><p>按照github上的说明，先将项目clone到本地编译。据说有安装包方法，没有尝试</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>clone https://github.com/ossrs/srs
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>等待源码下载。。。</p><p>进入 srs/trunk 目录下</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>cd srs/trunk
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>编译</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>sudo ./configure &amp;&amp; make
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>脚本会自动安装所需的相关依赖。</p><p>编译过程报了两次错， 第一次是CherryPy 重新编译了一次过了。。。回忆可能是因为没有sudo给权限，也可能是网络相关玄学原因</p><p>第二个错是openssl报错，貌似是系统和脚本指定的版本（openssl-1.1.0e）有冲突</p><p>查了一下已经有人踩过坑了，使用参数指定编译使用的openssl版本即可。</p><p>安装openssl</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>sudo apt-get install libssl-dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>指定系统默认的openssl编译</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>./configure --use-sys-ssl &amp;&amp; make
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>顺利通过</p><p><em>好像也可以通过修改编译脚本来达到效果，ctrlF了一下感觉略麻烦（看不懂脚本配置）没有尝试</em></p><h2 id="启动srs" tabindex="-1"><a class="header-anchor" href="#启动srs"><span>启动SRS</span></a></h2><p>依然留在trunk下，尝试第一次启动吧</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>./objs/srs -c conf/srs.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>关于srs的启动参数后面再说。特别是配置文件srs.conf</p><p>修改启动参数需要杀掉进程后重启</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>ps –ef|grep srs
sudo kill -9 进程
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="推流" tabindex="-1"><a class="header-anchor" href="#推流"><span>推流</span></a></h2><p>安装ffmpeg</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>sudo apt-get install ffmpeg
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在指定视频目录下运行ffmpeg</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>ffmpeg -re -i test.mp4 -c copy -f flv rtmp://172.16.110.110:1935/live/livestream
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>用支持rtmp的播放器就ok了</p><p><em>VLC media player</em></p><p><em>Potplayer</em></p>`,33),r=[i];function l(d,p){return t(),a("div",null,r)}const u=e(n,[["render",l],["__file","SRS简单部署.html.vue"]]),m=JSON.parse(`{"path":"/posts/SRS%E7%AE%80%E5%8D%95%E9%83%A8%E7%BD%B2.html","title":"SRS简单部署","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2021-03-11T00:00:00.000Z","category":["开发"],"tag":["流媒体","SRS"],"description":"SRS简单部署 安装 按照github上的说明，先将项目clone到本地编译。据说有安装包方法，没有尝试 等待源码下载。。。 进入 srs/trunk 目录下 编译 脚本会自动安装所需的相关依赖。 编译过程报了两次错， 第一次是CherryPy 重新编译了一次过了。。。回忆可能是因为没有sudo给权限，也可能是网络相关玄学原因 第二个错是openssl...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/SRS%E7%AE%80%E5%8D%95%E9%83%A8%E7%BD%B2.html"}],["meta",{"property":"og:site_name","content":"BCkun's BLOG"}],["meta",{"property":"og:title","content":"SRS简单部署"}],["meta",{"property":"og:description","content":"SRS简单部署 安装 按照github上的说明，先将项目clone到本地编译。据说有安装包方法，没有尝试 等待源码下载。。。 进入 srs/trunk 目录下 编译 脚本会自动安装所需的相关依赖。 编译过程报了两次错， 第一次是CherryPy 重新编译了一次过了。。。回忆可能是因为没有sudo给权限，也可能是网络相关玄学原因 第二个错是openssl..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-27T02:44:22.000Z"}],["meta",{"property":"article:author","content":"BlueCitizen"}],["meta",{"property":"article:tag","content":"流媒体"}],["meta",{"property":"article:tag","content":"SRS"}],["meta",{"property":"article:published_time","content":"2021-03-11T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-27T02:44:22.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"SRS简单部署\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-03-11T00:00:00.000Z\\",\\"dateModified\\":\\"2024-02-27T02:44:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"BlueCitizen\\",\\"url\\":\\"https://bckun.top\\"}]}"]]},"headers":[{"level":2,"title":"安装","slug":"安装","link":"#安装","children":[]},{"level":2,"title":"启动SRS","slug":"启动srs","link":"#启动srs","children":[]},{"level":2,"title":"推流","slug":"推流","link":"#推流","children":[]}],"git":{"createdTime":1709001862000,"updatedTime":1709001862000,"contributors":[{"name":"BlueCitizens","email":"bluecitizens@163.com","commits":1}]},"readingTime":{"minutes":1.22,"words":367},"filePathRelative":"posts/SRS简单部署.md","localizedDate":"2021年3月11日","excerpt":"\\n<h2>安装</h2>\\n<p>按照github上的说明，先将项目clone到本地编译。据说有安装包方法，没有尝试</p>\\n<div class=\\"language-text\\" data-ext=\\"text\\" data-title=\\"text\\"><pre class=\\"language-text\\"><code>clone https://github.com/ossrs/srs\\n</code></pre></div><p>等待源码下载。。。</p>\\n<p>进入 srs/trunk 目录下</p>\\n<div class=\\"language-text\\" data-ext=\\"text\\" data-title=\\"text\\"><pre class=\\"language-text\\"><code>cd srs/trunk\\n</code></pre></div>","autoDesc":true}`);export{u as comp,m as data};
