import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as t,o as s,c as o,a,b as i,d as p,e as l}from"./app-1Cz9djM3.js";const r={},c=l(`<h1 id="spring-boot常用注解" tabindex="-1"><a class="header-anchor" href="#spring-boot常用注解"><span>spring boot常用注解</span></a></h1><h2 id="pathvariable" tabindex="-1"><a class="header-anchor" href="#pathvariable"><span>@PathVariable</span></a></h2><p>@PathVariable 映射 URL 绑定的占位符</p><p>带占位符的URL是Spring3.0的新特性，该功能在SpringMVC向REST目标挺进发展过程中具有里程碑的意义 通过@PathVariable可以将URL中占位符参数绑定到控制器处理方法的入参中：URL 中的 {xxx} 占位符可以通过@PathVariable(&quot;xxx&quot;) 绑定到操作方法的入参中。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/test/{id}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> testId<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;sucess&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="validated" tabindex="-1"><a class="header-anchor" href="#validated"><span>@Validated</span></a></h2><p>Spring注解之@validated的使用</p><p>https://www.cnblogs.com/liaojie970/p/9036349.html</p><hr><h2 id="component" tabindex="-1"><a class="header-anchor" href="#component"><span>@Component</span></a></h2><p>当我们在一个类中使用@Autowired等Spring注解时，需要使用到@Component或其扩展注解。如果不用该注解或其扩展注解，则Spring会返回一个错误，指出找不到该类的bean。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Component</span>
<span class="token comment">//元注解，把普通pojo实例化到spring容器中</span>

<span class="token annotation punctuation">@Controller</span>
<span class="token comment">//控制器（注入服务），用于标注控制层</span>

<span class="token annotation punctuation">@Service</span>
<span class="token comment">//服务（注入dao）用于标注服务层，主要用来进行业务的逻辑处理</span>

<span class="token annotation punctuation">@Repository</span>
<span class="token comment">//（实现dao访问）用于标注数据访问层，也可以说用于标注数据访问组件，即DAO组件</span>

<span class="token doc-comment comment">/**
* 使用@Component,@Service,@Controller,@Repository注解的类，表示
* 把这些类纳入到spring容器中进行管理,同时也是表明把该类标记为
* Spring容器中的一个Bean。
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token operator">&lt;</span>context<span class="token operator">:</span>component<span class="token operator">-</span>scan base<span class="token operator">-</span><span class="token keyword">package</span><span class="token operator">=</span><span class="token string">&quot;com.mmnc&quot;</span><span class="token operator">&gt;</span>

<span class="token comment">//该配置项明确了Spring扫描包的范围，包括这个包及其含有的子包中被@Component和它的扩展注释的类，将它们扫描进Spring容器并注入成Bean</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>事实上，一旦我们正在写的类调用了含有Spring注解的类，例如我在实现类中用到了@Autowired注解声明一个接口实现类，也就表明了被注解的类是从Spring容器中取出的，则调用的类也需要接受Spring容器管理。如果我们不知道应该用什么来注解该类，就可以使用@Component来注解。</p><p>如何取出Bean：https://blog.csdn.net/lycyl/article/details/82865009</p><p>初始化和销毁：https://blog.csdn.net/thinkingcao/article/details/71171222</p><hr><h2 id="lombok插件-data精简实体类代码" tabindex="-1"><a class="header-anchor" href="#lombok插件-data精简实体类代码"><span>Lombok插件 @Data精简实体类代码</span></a></h2><ul><li>@Data : 注解在类上, 为类提供读写属性, 此外还重写了 equals()、hashCode()、toString() 方法，也提供了默认无参构造函数，但不提供序列化操作</li></ul><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">//Equivalent to {@code @Getter @Setter @RequiredArgsConstructor @ToString @EqualsAndHashCode}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>@Getter/@Setter : 注解在类上, 为类提供读写属性</li><li>@ToString : 注解在类上, 为类提供 toString() 方法</li><li>@Slf4j : 注解在类上, 为类提供一个属性名为 log 的 log4j 的日志对象</li><li>@Log4j : 注解在类上, 为类提供一个属性名为 log 的 log4j 的日志对象</li></ul><p><em>更常用的是 Slf4j 来做日志：</em></p>`,23),d={href:"https://www.oschina.net/translate/why-use-sl4j-over-log4j-for-logging",target:"_blank",rel:"noopener noreferrer"};function u(m,v){const n=t("ExternalLinkIcon");return s(),o("div",null,[c,a("p",null,[a("a",d,[i("为什么使用 SLF4J 而不是 Log4J 来做 Java 日志 (Why use SLF4J over Log4J for logging in Java) "),p(n)])])])}const b=e(r,[["render",u],["__file","spring boot常用注解.html.vue"]]),k=JSON.parse(`{"path":"/posts/spring%20boot%E5%B8%B8%E7%94%A8%E6%B3%A8%E8%A7%A3.html","title":"spring boot常用注解","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2021-04-17T00:00:00.000Z","category":["开发"],"tag":["Java","Spring"],"description":"spring boot常用注解 @PathVariable @PathVariable 映射 URL 绑定的占位符 带占位符的URL是Spring3.0的新特性，该功能在SpringMVC向REST目标挺进发展过程中具有里程碑的意义 通过@PathVariable可以将URL中占位符参数绑定到控制器处理方法的入参中：URL 中的 {xxx} 占位符可以...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/spring%20boot%E5%B8%B8%E7%94%A8%E6%B3%A8%E8%A7%A3.html"}],["meta",{"property":"og:site_name","content":"BCkun's BLOG"}],["meta",{"property":"og:title","content":"spring boot常用注解"}],["meta",{"property":"og:description","content":"spring boot常用注解 @PathVariable @PathVariable 映射 URL 绑定的占位符 带占位符的URL是Spring3.0的新特性，该功能在SpringMVC向REST目标挺进发展过程中具有里程碑的意义 通过@PathVariable可以将URL中占位符参数绑定到控制器处理方法的入参中：URL 中的 {xxx} 占位符可以..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-27T02:44:22.000Z"}],["meta",{"property":"article:author","content":"BlueCitizen"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"Spring"}],["meta",{"property":"article:published_time","content":"2021-04-17T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-27T02:44:22.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"spring boot常用注解\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-04-17T00:00:00.000Z\\",\\"dateModified\\":\\"2024-02-27T02:44:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"BlueCitizen\\",\\"url\\":\\"https://bckun.top\\"}]}"]]},"headers":[{"level":2,"title":"@PathVariable","slug":"pathvariable","link":"#pathvariable","children":[]},{"level":2,"title":"@Validated","slug":"validated","link":"#validated","children":[]},{"level":2,"title":"@Component","slug":"component","link":"#component","children":[]},{"level":2,"title":"Lombok插件 @Data精简实体类代码","slug":"lombok插件-data精简实体类代码","link":"#lombok插件-data精简实体类代码","children":[]}],"git":{"createdTime":1709001862000,"updatedTime":1709001862000,"contributors":[{"name":"BlueCitizens","email":"bluecitizens@163.com","commits":1}]},"readingTime":{"minutes":2.36,"words":709},"filePathRelative":"posts/spring boot常用注解.md","localizedDate":"2021年4月17日","excerpt":"\\n<h2>@PathVariable</h2>\\n<p>@PathVariable 映射 URL 绑定的占位符</p>\\n<p>带占位符的URL是Spring3.0的新特性，该功能在SpringMVC向REST目标挺进发展过程中具有里程碑的意义\\n通过@PathVariable可以将URL中占位符参数绑定到控制器处理方法的入参中：URL 中的 {xxx} 占位符可以通过@PathVariable(\\"xxx\\") 绑定到操作方法的入参中。</p>\\n<div class=\\"language-java\\" data-ext=\\"java\\" data-title=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token annotation punctuation\\">@RequestMapping</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"/test/{id}\\"</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">String</span> <span class=\\"token function\\">test</span><span class=\\"token punctuation\\">(</span><span class=\\"token annotation punctuation\\">@PathVariable</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"id\\"</span><span class=\\"token punctuation\\">)</span> <span class=\\"token class-name\\">Integer</span> testId<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token string\\">\\"sucess\\"</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n</code></pre></div>","autoDesc":true}`);export{b as comp,k as data};
