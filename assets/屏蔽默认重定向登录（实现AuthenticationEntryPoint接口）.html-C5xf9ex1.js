import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,d as t}from"./app-BAOdPLI2.js";const e={},p=t(`<h1 id="屏蔽默认重定向登录-实现authenticationentrypoint接口" tabindex="-1"><a class="header-anchor" href="#屏蔽默认重定向登录-实现authenticationentrypoint接口"><span>屏蔽默认重定向登录（实现AuthenticationEntryPoint接口）</span></a></h1><p>默认配置下Spring Security会保护所有资源接口，匿名用户将被强制转发到login接口。有时我们并不需要使用默认的登录接口，尤其需要实现前后端分离时。</p><p>1、实现AuthenticationEntryPoint接口</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * @Author: BlueCitizens
 * @Date: 2021/3/13 22:04
 * @Description: AuthenticationEntryPoint处理匿名用户访问无权限资源时的异常（未登录，登录状态过期失效等）
 */</span>
<span class="token annotation punctuation">@Component</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AuthenticationEntryPointImpl</span> <span class="token keyword">implements</span> <span class="token class-name">AuthenticationEntryPoint</span><span class="token punctuation">,</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">commence</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">AuthenticationException</span> e<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">ServletException</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;Unauthorized access: \\ncurrent IP:{}\\nrequest URI :{}\\n&quot;</span><span class="token punctuation">,</span> <span class="token class-name">IpUtils</span><span class="token punctuation">.</span><span class="token function">getIpAddr</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">,</span> request<span class="token punctuation">.</span><span class="token function">getRequestURI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> msg <span class="token operator">=</span> <span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;Unauthorized access：{}，Authentication failed, unable to access system resources &quot;</span><span class="token punctuation">,</span> request<span class="token punctuation">.</span><span class="token function">getRequestURI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ServletUtils</span><span class="token punctuation">.</span><span class="token function">renderString</span><span class="token punctuation">(</span>response<span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span><span class="token class-name">AjaxResult</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token class-name">HttpStatus</span><span class="token punctuation">.</span><span class="token constant">UNAUTHORIZED</span><span class="token punctuation">,</span> msg<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2、注入SecurityConfig</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span><span class="token class-name">HttpSecurity</span> httpSecurity<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        httpSecurity
                <span class="token comment">// 认证失败处理类</span>
                <span class="token punctuation">.</span><span class="token function">exceptionHandling</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">authenticationEntryPoint</span><span class="token punctuation">(</span>authenticationEntryPoint<span class="token punctuation">)</span><span class="token comment">//访问无权限资源时的异常处理</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此时再调用未授权的接口就会直接返回错误信息给前台处理。</p>`,7),o=[p];function c(i,u){return s(),a("div",null,o)}const k=n(e,[["render",c],["__file","屏蔽默认重定向登录（实现AuthenticationEntryPoint接口）.html.vue"]]),d=JSON.parse(`{"path":"/posts/%E5%B1%8F%E8%94%BD%E9%BB%98%E8%AE%A4%E9%87%8D%E5%AE%9A%E5%90%91%E7%99%BB%E5%BD%95%EF%BC%88%E5%AE%9E%E7%8E%B0AuthenticationEntryPoint%E6%8E%A5%E5%8F%A3%EF%BC%89.html","title":"屏蔽默认重定向登录（实现AuthenticationEntryPoint接口）","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2021-03-16T00:00:00.000Z","category":["开发"],"tag":["Java","Spring"],"description":"屏蔽默认重定向登录（实现AuthenticationEntryPoint接口） 默认配置下Spring Security会保护所有资源接口，匿名用户将被强制转发到login接口。有时我们并不需要使用默认的登录接口，尤其需要实现前后端分离时。 1、实现AuthenticationEntryPoint接口 2、注入SecurityConfig 此时再调用未...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/%E5%B1%8F%E8%94%BD%E9%BB%98%E8%AE%A4%E9%87%8D%E5%AE%9A%E5%90%91%E7%99%BB%E5%BD%95%EF%BC%88%E5%AE%9E%E7%8E%B0AuthenticationEntryPoint%E6%8E%A5%E5%8F%A3%EF%BC%89.html"}],["meta",{"property":"og:site_name","content":"BCkun's BLOG"}],["meta",{"property":"og:title","content":"屏蔽默认重定向登录（实现AuthenticationEntryPoint接口）"}],["meta",{"property":"og:description","content":"屏蔽默认重定向登录（实现AuthenticationEntryPoint接口） 默认配置下Spring Security会保护所有资源接口，匿名用户将被强制转发到login接口。有时我们并不需要使用默认的登录接口，尤其需要实现前后端分离时。 1、实现AuthenticationEntryPoint接口 2、注入SecurityConfig 此时再调用未..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-27T02:44:22.000Z"}],["meta",{"property":"article:author","content":"BlueCitizen"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"Spring"}],["meta",{"property":"article:published_time","content":"2021-03-16T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-27T02:44:22.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"屏蔽默认重定向登录（实现AuthenticationEntryPoint接口）\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-03-16T00:00:00.000Z\\",\\"dateModified\\":\\"2024-02-27T02:44:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"BlueCitizen\\",\\"url\\":\\"https://bckun.top\\"}]}"]]},"headers":[],"git":{"createdTime":1709001862000,"updatedTime":1709001862000,"contributors":[{"name":"BlueCitizens","email":"bluecitizens@163.com","commits":1}]},"readingTime":{"minutes":0.83,"words":249},"filePathRelative":"posts/屏蔽默认重定向登录（实现AuthenticationEntryPoint接口）.md","localizedDate":"2021年3月16日","excerpt":"\\n<p>默认配置下Spring Security会保护所有资源接口，匿名用户将被强制转发到login接口。有时我们并不需要使用默认的登录接口，尤其需要实现前后端分离时。</p>\\n<p>1、实现AuthenticationEntryPoint接口</p>\\n<div class=\\"language-java\\" data-ext=\\"java\\" data-title=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token doc-comment comment\\">/**\\n * @Author: BlueCitizens\\n * @Date: 2021/3/13 22:04\\n * @Description: AuthenticationEntryPoint处理匿名用户访问无权限资源时的异常（未登录，登录状态过期失效等）\\n */</span>\\n<span class=\\"token annotation punctuation\\">@Component</span>\\n<span class=\\"token annotation punctuation\\">@Slf4j</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">AuthenticationEntryPointImpl</span> <span class=\\"token keyword\\">implements</span> <span class=\\"token class-name\\">AuthenticationEntryPoint</span><span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">Serializable</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token annotation punctuation\\">@Override</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">commence</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">HttpServletRequest</span> request<span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">HttpServletResponse</span> response<span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">AuthenticationException</span> e<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">throws</span> <span class=\\"token class-name\\">IOException</span><span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">ServletException</span> <span class=\\"token punctuation\\">{</span>\\n        log<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">error</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Unauthorized access: \\\\ncurrent IP:{}\\\\nrequest URI :{}\\\\n\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">IpUtils</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getIpAddr</span><span class=\\"token punctuation\\">(</span>request<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> request<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getRequestURI</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token class-name\\">String</span> msg <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">StringUtils</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">format</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Unauthorized access：{}，Authentication failed, unable to access system resources \\"</span><span class=\\"token punctuation\\">,</span> request<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getRequestURI</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token class-name\\">ServletUtils</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">renderString</span><span class=\\"token punctuation\\">(</span>response<span class=\\"token punctuation\\">,</span> <span class=\\"token constant\\">JSON</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">toJSONString</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">AjaxResult</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">error</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">HttpStatus</span><span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">UNAUTHORIZED</span><span class=\\"token punctuation\\">,</span> msg<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre></div>","autoDesc":true}`);export{k as comp,d as data};
